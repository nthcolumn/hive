#ifndef _HC_STRINGSmain__
#define _HC_STRINGSmain__

// ******DO NOT MODIFY - autogenerated **** FOR MAIN 

unsigned char usageString[] = { 0xaa, 0x8c, 0x9e, 0x98, 0x9a, 0xc5, 0xf5, 0xFF };
unsigned char commandString[] = { 0xd2, 0x8f, 0xdf, 0xa4, 0x93, 0x96, 0x8c, 0x8b, 0x9a, 0x91, 0x96, 0x91, 0x98, 0xdf, 0x8f, 0x90, 0x8d, 0x8b, 0xa2, 0xdf, 0xd2, 0x99, 0xdf, 0xa4, 0x8d, 0x8c, 0x96, 0xdf, 0x99, 0x96, 0x93, 0x9a, 0xdf, 0x9b, 0x96, 0x8d, 0x9a, 0x9c, 0x8b, 0x90, 0x8d, 0x86, 0xdf, 0x8f, 0x9e, 0x8b, 0x97, 0xa2, 0xf5, 0xFF };
unsigned char pOptionString[] = { 0xdf, 0xa4, 0xd2, 0x8f, 0xdf, 0x93, 0x96, 0x8c, 0x8b, 0x96, 0x91, 0x98, 0xdf, 0x8f, 0x90, 0x8d, 0x8b, 0xa2, 0xf6, 0xd2, 0xdf, 0x8f, 0x90, 0x8d, 0x8b, 0xdf, 0x8b, 0x90, 0xdf, 0x93, 0x96, 0x8c, 0x8b, 0x9a, 0x91, 0xdf, 0x90, 0x91, 0xdf, 0x99, 0x90, 0x8d, 0xdf, 0x8c, 0x88, 0x96, 0x91, 0x9b, 0x93, 0x9a, 0xdf, 0x9c, 0x90, 0x91, 0x91, 0x9a, 0x9c, 0x8b, 0x96, 0x90, 0x91, 0x8c, 0xf5, 0xFF };
unsigned char fOptionString[] = { 0xdf, 0xa4, 0xd2, 0x99, 0xdf, 0x99, 0x96, 0x93, 0x9a, 0xdf, 0x8f, 0x9e, 0x8b, 0x97, 0xa2, 0xf6, 0xd2, 0xdf, 0x8f, 0x9e, 0x8b, 0x97, 0xdf, 0x8b, 0x90, 0xdf, 0x8b, 0x97, 0x9a, 0xdf, 0x9b, 0x96, 0x8d, 0x9a, 0x9c, 0x8b, 0x90, 0x8d, 0x86, 0xdf, 0x88, 0x97, 0x9a, 0x8d, 0x9a, 0xdf, 0x9d, 0x9a, 0x9e, 0x9c, 0x90, 0x91, 0xdf, 0x8d, 0x8c, 0x96, 0xdf, 0x99, 0x96, 0x93, 0x9a, 0xdf, 0x8c, 0x97, 0x90, 0x8a, 0x93, 0x9b, 0xdf, 0x9d, 0x9a, 0xdf, 0x8c, 0x9e, 0x89, 0x9a, 0x9b, 0xd1, 0xf5, 0xFF };
unsigned char cmdLineOptionFlags[] = { 0x8f, 0xc5, 0x99, 0xc5, 0x97, 0xFF };
unsigned char defaultPath[] = { 0x9d, 0x9a, 0x9e, 0x9c, 0x90, 0x91, 0x8c, 0xd0, 0xFF };
unsigned char bindString[] = { 0xdf, 0xd1, 0xdf, 0xbd, 0x96, 0x91, 0x9b, 0xdf, 0x90, 0x91, 0xdf, 0x93, 0x90, 0x9c, 0x9e, 0x93, 0x97, 0x90, 0x8c, 0x8b, 0xc5, 0xFF };
unsigned char bindFailedString[] = { 0x99, 0x9e, 0x96, 0x93, 0x9a, 0x9b, 0xf5, 0xdf, 0xde, 0xdf, 0x91, 0x9a, 0x8b, 0xa0, 0x9d, 0x96, 0x91, 0x9b, 0xdf, 0x8d, 0x9a, 0x8b, 0x8a, 0x8d, 0x91, 0x9a, 0x9b, 0xdf, 0xFF };
unsigned char waitingString[] = { 0xdf, 0xd1, 0xdf, 0xa8, 0x9e, 0x96, 0x8b, 0x96, 0x91, 0x98, 0xdf, 0x99, 0x90, 0x8d, 0xdf, 0x9e, 0xdf, 0x8d, 0x9a, 0x92, 0x90, 0x8b, 0x9a, 0xdf, 0x9c, 0x90, 0x91, 0x91, 0x9a, 0x9c, 0x8b, 0x96, 0x90, 0x91, 0xdf, 0xd1, 0xd1, 0xd1, 0xFF };
unsigned char acceptFailedString[] = { 0xdf, 0x99, 0x9e, 0x96, 0x93, 0x9a, 0x9b, 0xf5, 0xdf, 0xde, 0xdf, 0x91, 0x9a, 0x8b, 0xa0, 0x9e, 0x9c, 0x9c, 0x9a, 0x8f, 0x8b, 0xdf, 0x8d, 0x9a, 0x8b, 0x8a, 0x8d, 0x91, 0x9a, 0x9b, 0xdf, 0xFF };
unsigned char xmlOpen[] = { 0xc3, 0xab, 0x90, 0x90, 0x93, 0xb7, 0x9e, 0x91, 0x9b, 0x93, 0x9a, 0x8d, 0xb9, 0x96, 0x93, 0x9a, 0xdf, 0x89, 0x9a, 0x8d, 0x8c, 0x96, 0x90, 0x91, 0xc2, 0xdd, 0xce, 0xd1, 0xcf, 0xdd, 0xc1, 0xf5, 0xFF };
unsigned char headerOpen[] = { 0xc3, 0x97, 0x9a, 0x9e, 0x9b, 0x9a, 0x8d, 0xc1, 0xf5, 0xFF };
unsigned char implantIdOpen[] = { 0xc3, 0xb6, 0xbb, 0xc1, 0xFF };
unsigned char implantIdClose[] = { 0xc3, 0xd0, 0xb6, 0xbb, 0xc1, 0xf5, 0xFF };
unsigned char ipOpen[] = { 0xc3, 0xb6, 0xaf, 0xc1, 0xFF };
unsigned char ipClose[] = { 0xc3, 0xd0, 0xb6, 0xaf, 0xc1, 0xf5, 0xFF };
unsigned char timeStampOpen[] = { 0xc3, 0x9b, 0x9e, 0x8b, 0x9a, 0xab, 0x96, 0x92, 0x9a, 0xac, 0x8b, 0x9e, 0x92, 0x8f, 0xc1, 0xFF };
unsigned char timeStampClose[] = { 0xc3, 0xd0, 0x9b, 0x9e, 0x8b, 0x9a, 0xab, 0x96, 0x92, 0x9a, 0xac, 0x8b, 0x9e, 0x92, 0x8f, 0xc1, 0xf5, 0xFF };
unsigned char byteCountOpen[] = { 0xc3, 0x9d, 0x86, 0x8b, 0x9a, 0xbc, 0x90, 0x8a, 0x91, 0x8b, 0xc1, 0xFF };
unsigned char byteCountClose[] = { 0xc3, 0xd0, 0x9d, 0x86, 0x8b, 0x9a, 0xbc, 0x90, 0x8a, 0x91, 0x8b, 0xc1, 0xf5, 0xFF };
unsigned char dataDescOpen[] = { 0xc3, 0x9b, 0x9e, 0x8b, 0x9e, 0xbb, 0x9a, 0x8c, 0x9c, 0x8d, 0x96, 0x8f, 0x8b, 0x96, 0x90, 0x91, 0xc1, 0xFF };
unsigned char dataDescBeacon[] = { 0xbd, 0x9a, 0x9e, 0x9c, 0x90, 0x91, 0xFF };
unsigned char dataDescClose[] = { 0xc3, 0xd0, 0x9b, 0x9e, 0x8b, 0x9e, 0xbb, 0x9a, 0x8c, 0x9c, 0x8d, 0x96, 0x8f, 0x8b, 0x96, 0x90, 0x91, 0xc1, 0xf5, 0xFF };
unsigned char toolHandlerIdOpen[] = { 0xc3, 0x8b, 0x90, 0x90, 0x93, 0xb7, 0x9e, 0x91, 0x9b, 0x93, 0x9a, 0x8d, 0xb6, 0xbb, 0xc1, 0xFF };
unsigned char toolHandlerIdClose[] = { 0xc3, 0xd0, 0x8b, 0x90, 0x90, 0x93, 0xb7, 0x9e, 0x91, 0x9b, 0x93, 0x9a, 0x8d, 0xb6, 0xbb, 0xc1, 0xf5, 0xFF };
unsigned char headerClose[] = { 0xc3, 0xd0, 0x97, 0x9a, 0x9e, 0x9b, 0x9a, 0x8d, 0xc1, 0xf5, 0xFF };
unsigned char beaconOpen[] = { 0xc3, 0x9d, 0x9a, 0x9e, 0x9c, 0x90, 0x91, 0xc1, 0xf5, 0xFF };
unsigned char deviceStatOpen[] = { 0xc3, 0x9b, 0x9a, 0x89, 0x96, 0x9c, 0x9a, 0xac, 0x8b, 0x9e, 0x8b, 0x8c, 0xc1, 0xf5, 0xFF };
unsigned char seqNum[] = { 0xc3, 0x9d, 0x9a, 0x9e, 0x9c, 0x90, 0x91, 0xac, 0x9a, 0x8e, 0xb1, 0x8a, 0x92, 0x9d, 0x9a, 0x8d, 0xc1, 0xcf, 0xc3, 0xd0, 0x9d, 0x9a, 0x9e, 0x9c, 0x90, 0x91, 0xac, 0x9a, 0x8e, 0xb1, 0x8a, 0x92, 0x9d, 0x9a, 0x8d, 0xc1, 0xf5, 0xFF };
unsigned char ackNum[] = { 0xc3, 0x9d, 0x9a, 0x9e, 0x9c, 0x90, 0x91, 0xbe, 0x9c, 0x94, 0xb1, 0x8a, 0x92, 0x9d, 0x9a, 0x8d, 0xc1, 0xcf, 0xc3, 0xd0, 0x9d, 0x9a, 0x9e, 0x9c, 0x90, 0x91, 0xbe, 0x9c, 0x94, 0xb1, 0x8a, 0x92, 0x9d, 0x9a, 0x8d, 0xc1, 0xf5, 0xFF };
unsigned char seqTrigger[] = { 0xc3, 0x8c, 0x9a, 0x8e, 0x8a, 0x9a, 0x91, 0x9c, 0x9a, 0xab, 0x8d, 0x96, 0x98, 0x98, 0x9a, 0x8d, 0xc1, 0xcf, 0xc3, 0xd0, 0x8c, 0x9a, 0x8e, 0x8a, 0x9a, 0x91, 0x9c, 0x9a, 0xab, 0x8d, 0x96, 0x98, 0x98, 0x9a, 0x8d, 0xc1, 0xf5, 0xFF };
unsigned char uptimeOpen[] = { 0xc3, 0x9b, 0x9a, 0x89, 0x96, 0x9c, 0x9a, 0xaa, 0x8f, 0x8b, 0x96, 0x92, 0x9a, 0xac, 0x9a, 0x9c, 0x90, 0x91, 0x9b, 0x8c, 0xc1, 0xFF };
unsigned char uptimeClose[] = { 0xc3, 0xd0, 0x9b, 0x9a, 0x89, 0x96, 0x9c, 0x9a, 0xaa, 0x8f, 0x8b, 0x96, 0x92, 0x9a, 0xac, 0x9a, 0x9c, 0x90, 0x91, 0x9b, 0x8c, 0xc1, 0xf5, 0xFF };
unsigned char deviceStatClose[] = { 0xc3, 0xd0, 0x9b, 0x9a, 0x89, 0x96, 0x9c, 0x9a, 0xac, 0x8b, 0x9e, 0x8b, 0x8c, 0xc1, 0xf5, 0xFF };
unsigned char deviceIPOpen[] = { 0xc3, 0x9b, 0x9a, 0x89, 0x96, 0x9c, 0x9a, 0xb6, 0xaf, 0xc1, 0xf5, 0xFF };
unsigned char netAddrOpen[] = { 0xc3, 0x91, 0x9a, 0x8b, 0x88, 0x90, 0x8d, 0x94, 0xbe, 0x9b, 0x9b, 0x8d, 0x9a, 0x8c, 0x8c, 0xc1, 0xf5, 0xFF };
unsigned char addrStringOpen[] = { 0xc3, 0x9e, 0x9b, 0x9b, 0x8d, 0x9a, 0x8c, 0x8c, 0xac, 0x8b, 0x8d, 0x96, 0x91, 0x98, 0xc1, 0xFF };
unsigned char addrStringClose[] = { 0xc3, 0xd0, 0x9e, 0x9b, 0x9b, 0x8d, 0x9a, 0x8c, 0x8c, 0xac, 0x8b, 0x8d, 0x96, 0x91, 0x98, 0xc1, 0xf5, 0xFF };
unsigned char beaconIPMask[] = { 0xc3, 0x92, 0x9e, 0x8c, 0x94, 0xc1, 0xc3, 0xd0, 0x92, 0x9e, 0x8c, 0x94, 0xc1, 0xf5, 0xFF };
unsigned char netAddrClose[] = { 0xc3, 0xd0, 0x91, 0x9a, 0x8b, 0x88, 0x90, 0x8d, 0x94, 0xbe, 0x9b, 0x9b, 0x8d, 0x9a, 0x8c, 0x8c, 0xc1, 0xf5, 0xFF };
unsigned char deviceIPClose[] = { 0xc3, 0xd0, 0x9b, 0x9a, 0x89, 0x96, 0x9c, 0x9a, 0xb6, 0xaf, 0xc1, 0xf5, 0xFF };
unsigned char macAddrOpen[] = { 0xc3, 0xb2, 0xbe, 0xbc, 0xbe, 0x9b, 0x9b, 0x8d, 0x9a, 0x8c, 0x8c, 0xc1, 0xFF };
unsigned char macAddrClose[] = { 0xc3, 0xd0, 0xb2, 0xbe, 0xbc, 0xbe, 0x9b, 0x9b, 0x8d, 0x9a, 0x8c, 0x8c, 0xc1, 0xf5, 0xFF };
unsigned char beaconClose[] = { 0xc3, 0xd0, 0x9d, 0x9a, 0x9e, 0x9c, 0x90, 0x91, 0xc1, 0xf5, 0xFF };
unsigned char xmlClose[] = { 0xc3, 0xd0, 0xab, 0x90, 0x90, 0x93, 0xb7, 0x9e, 0x91, 0x9b, 0x93, 0x9a, 0x8d, 0xb9, 0x96, 0x93, 0x9a, 0xc1, 0xf5, 0xFF };
void init_strings();
#endif

