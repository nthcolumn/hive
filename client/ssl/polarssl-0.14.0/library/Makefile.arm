#------------------------------------------------
#Makefile for compiling Linux
# Makefile.mipsel
#
# For other possible targets, please enter:
#	
#		make all
#
#------------------------------------------------
ARCH=arm
TOOLROOT=arm-unknown-linux-gnueabi-
UCLIBC_HDRS=/include
UCLIBC_LIBS=/lib
CC=${TOOLROOT}gcc
AR=${TOOLROOT}ar
RANLIB=${TOOLROOT}ranlib

CFLAGS  = -I../include -I$(UCLIBC_HDRS) -L$(UCLIBC_LIBS) -Wall -W
CFLAGS  += -D_MIPS_SZPTR=32 -DLINUX -DMIPS_LE
OFLAGS	= -Os

# MicroBlaze specific options:
# CFLAGS += -mno-xl-soft-mul -mxl-barrel-shift

# To compile on Plan9:
# CFLAGS += -D_BSD_EXTENSION

# To compile as a shared library:
# CFLAGS += -fPIC

DLEXT=so
# OSX shared library extension:
# DLEXT=dylib

OBJS=	aes.o		arc4.o		base64.o	\
	bignum.o	certs.o		debug.o		\
	des.o		dhm.o		havege.o	\
	md2.o		md4.o		md5.o		\
	net.o		padlock.o	rsa.o		\
	sha1.o		sha2.o		sha4.o		\
	ssl_cli.o	ssl_srv.o	ssl_tls.o	\
	timing.o	x509parse.o	xtea.o		\
	camellia.o  version.o	loki_utils.o

#CC = gcc

.SILENT:

.PHONY : all
all: clean static
	
static: libpolarssl.a 

shared: libpolarssl.$(DLEXT)

libpolarssl.a: $(OBJS) 
	echo "  AR    $@"
	$(AR) r $@ $(OBJS)
	echo "  RL    $@"
	ar -s $@

libpolarssl.so: libpolarssl.a
	echo "  LD    $@"
	$(CC) -shared -Wl,-soname,$@ -o $@ $(OBJS)

libpolarssl.dylib: libpolarssl.a
	echo "  LD    $@"
	$(CC) -dynamiclib -o $@ $(OBJS)

.c.o: 
	echo "  CC    $<"
	$(CC) $(CFLAGS) $(OFLAGS) -c $<

clean:
	make -f ./Makefile clean
#	rm -f *.o libpolarssl.*
